{"version":3,"sources":["sets-compiled.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,KAAK,GAAG,IAAI,GAAG,EAAE,CAAC;AACtB,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AACnB,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACpB,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACpB,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AACnB,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;;AAEnB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;;AAEnB,IAAI,yBAAyB,GAAG,IAAI,CAAC;AACrC,IAAI,iBAAiB,GAAG,KAAK,CAAC;AAC9B,IAAI,cAAc,GAAG,SAAS,CAAC;;AAE/B,IAAI;AACA,SAAK,IAAI,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,yBAAyB,GAAG,CAAC,KAAK,GAAG,SAAS,CAAC,IAAI,EAAE,CAAA,CAAE,IAAI,CAAA,AAAC,EAAE,yBAAyB,GAAG,IAAI,EAAE;AACpJ,YAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;;AAExB,eAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;KACtB;CACJ,CAAC,OAAO,GAAG,EAAE;AACV,qBAAiB,GAAG,IAAI,CAAC;AACzB,kBAAc,GAAG,GAAG,CAAC;CACxB,SAAS;AACN,QAAI;AACA,YAAI,CAAC,yBAAyB,IAAI,SAAS,CAAC,QAAQ,CAAC,EAAE;AACnD,qBAAS,CAAC,QAAQ,CAAC,EAAE,CAAC;SACzB;KACJ,SAAS;AACN,YAAI,iBAAiB,EAAE;AACnB,kBAAM,cAAc,CAAC;SACxB;KACJ;CACJ;;AAED,IAAI,KAAK,GAAG,IAAI,GAAG,EAAE,CAAC;;AAEtB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACb,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACb,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AACvB,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AACvB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;AAEb,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACb,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACb,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACb,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;AACzB,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC;AACrC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;AAEb,KAAK,CAAC,IAAI,CAAC;;AAEX,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;AAEb,KAAK,CAAC,IAAI,CAAC;;AAEX,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;;AAEnB,IAAI,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC;AACpB,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AAChB,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;;AAEhB,IAAI,0BAA0B,GAAG,IAAI,CAAC;AACtC,IAAI,kBAAkB,GAAG,KAAK,CAAC;AAC/B,IAAI,eAAe,GAAG,SAAS,CAAC;;AAEhC,IAAI;AACA,SAAK,IAAI,UAAU,GAAG,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,MAAM,EAAE,EAAE,0BAA0B,GAAG,CAAC,MAAM,GAAG,UAAU,CAAC,IAAI,EAAE,CAAA,CAAE,IAAI,CAAA,AAAC,EAAE,0BAA0B,GAAG,IAAI,EAAE;AACxJ,YAAI,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC;;AAExB,eAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;KACrB;CACJ,CAAC,OAAO,GAAG,EAAE;AACV,sBAAkB,GAAG,IAAI,CAAC;AAC1B,mBAAe,GAAG,GAAG,CAAC;CACzB,SAAS;AACN,QAAI;AACA,YAAI,CAAC,0BAA0B,IAAI,UAAU,CAAC,QAAQ,CAAC,EAAE;AACrD,sBAAU,CAAC,QAAQ,CAAC,EAAE,CAAC;SAC1B;KACJ,SAAS;AACN,YAAI,kBAAkB,EAAE;AACpB,kBAAM,eAAe,CAAC;SACzB;KACJ;CACJ;;AAED,IAAI,0BAA0B,GAAG,IAAI,CAAC;AACtC,IAAI,kBAAkB,GAAG,KAAK,CAAC;AAC/B,IAAI,eAAe,GAAG,SAAS,CAAC;;AAEhC,IAAI;AACA,SAAK,IAAI,UAAU,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,MAAM,EAAE,EAAE,0BAA0B,GAAG,CAAC,MAAM,GAAG,UAAU,CAAC,IAAI,EAAE,CAAA,CAAE,IAAI,CAAA,AAAC,EAAE,0BAA0B,GAAG,IAAI,EAAE;AAC/J,YAAI,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC;;AAEvB,eAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KACpB;CACJ,CAAC,OAAO,GAAG,EAAE;AACV,sBAAkB,GAAG,IAAI,CAAC;AAC1B,mBAAe,GAAG,GAAG,CAAC;CACzB,SAAS;AACN,QAAI;AACA,YAAI,CAAC,0BAA0B,IAAI,UAAU,CAAC,QAAQ,CAAC,EAAE;AACrD,sBAAU,CAAC,QAAQ,CAAC,EAAE,CAAC;SAC1B;KACJ,SAAS;AACN,YAAI,kBAAkB,EAAE;AACpB,kBAAM,eAAe,CAAC;SACzB;KACJ;CACJ;;AAED,IAAI,0BAA0B,GAAG,IAAI,CAAC;AACtC,IAAI,kBAAkB,GAAG,KAAK,CAAC;AAC/B,IAAI,eAAe,GAAG,SAAS,CAAC;;AAEhC,IAAI;AACA,SAAK,IAAI,UAAU,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,MAAM,EAAE,EAAE,0BAA0B,GAAG,CAAC,MAAM,GAAG,UAAU,CAAC,IAAI,EAAE,CAAA,CAAE,IAAI,CAAA,AAAC,EAAE,0BAA0B,GAAG,IAAI,EAAE;AACjK,YAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;;AAEzB,eAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;KACtB;CACJ,CAAC,OAAO,GAAG,EAAE;AACV,sBAAkB,GAAG,IAAI,CAAC;AAC1B,mBAAe,GAAG,GAAG,CAAC;CACzB,SAAS;AACN,QAAI;AACA,YAAI,CAAC,0BAA0B,IAAI,UAAU,CAAC,QAAQ,CAAC,EAAE;AACrD,sBAAU,CAAC,QAAQ,CAAC,EAAE,CAAC;SAC1B;KACJ,SAAS;AACN,YAAI,kBAAkB,EAAE;AACpB,kBAAM,eAAe,CAAC;SACzB;KACJ;CACJ","file":"sets-compiled-compiled.js","sourcesContent":["'use strict';\n\nvar names = new Set();\nnames.add('Samir');\nnames.add('Fatima');\nnames.add('Mariam');\nnames.add('Ahmed');\nnames.add('Samir'); // won't be added\n\nconsole.log(names);\n\nvar _iteratorNormalCompletion = true;\nvar _didIteratorError = false;\nvar _iteratorError = undefined;\n\ntry {\n    for (var _iterator = names[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var _name = _step.value;\n\n        console.log(_name);\n    }\n} catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n} finally {\n    try {\n        if (!_iteratorNormalCompletion && _iterator['return']) {\n            _iterator['return']();\n        }\n    } finally {\n        if (_didIteratorError) {\n            throw _iteratorError;\n        }\n    }\n}\n\nvar mySet = new Set();\n\nmySet.add(1);\nmySet.add(5);\nmySet.add(\"some text\");\nvar o = { a: 1, b: 2 };\nmySet.add(o);\n\nmySet.has(1); // true\nmySet.has(3); // false, 3 has not been added to the set\nmySet.has(5); // true\nmySet.has(Math.sqrt(25)); // true\nmySet.has(\"Some Text\".toLowerCase()); // true\nmySet.has(o); // true\n\nmySet.size; // 4\n\nmySet['delete'](5); // removes 5 from the set\nmySet.has(5); // false, 5 has been removed\n\nmySet.size; // 3, we just removed one value\n\nconsole.log(mySet);\n\nvar map = new Map();\nmap.set(1, 'a');\nmap.set(2, 'b');\n\nvar _iteratorNormalCompletion2 = true;\nvar _didIteratorError2 = false;\nvar _iteratorError2 = undefined;\n\ntry {\n    for (var _iterator2 = map[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var pair = _step2.value;\n\n        console.log(pair);\n    }\n} catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n} finally {\n    try {\n        if (!_iteratorNormalCompletion2 && _iterator2['return']) {\n            _iterator2['return']();\n        }\n    } finally {\n        if (_didIteratorError2) {\n            throw _iteratorError2;\n        }\n    }\n}\n\nvar _iteratorNormalCompletion3 = true;\nvar _didIteratorError3 = false;\nvar _iteratorError3 = undefined;\n\ntry {\n    for (var _iterator3 = map.keys()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n        var key = _step3.value;\n\n        console.log(key);\n    }\n} catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n} finally {\n    try {\n        if (!_iteratorNormalCompletion3 && _iterator3['return']) {\n            _iterator3['return']();\n        }\n    } finally {\n        if (_didIteratorError3) {\n            throw _iteratorError3;\n        }\n    }\n}\n\nvar _iteratorNormalCompletion4 = true;\nvar _didIteratorError4 = false;\nvar _iteratorError4 = undefined;\n\ntry {\n    for (var _iterator4 = map.values()[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n        var value = _step4.value;\n\n        console.log(value);\n    }\n} catch (err) {\n    _didIteratorError4 = true;\n    _iteratorError4 = err;\n} finally {\n    try {\n        if (!_iteratorNormalCompletion4 && _iterator4['return']) {\n            _iterator4['return']();\n        }\n    } finally {\n        if (_didIteratorError4) {\n            throw _iteratorError4;\n        }\n    }\n}\n\n//# sourceMappingURL=sets-compiled.js.map"]}